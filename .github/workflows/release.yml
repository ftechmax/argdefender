name: Release package

on:
  push:
    branches:
      - "main"
      - "initial"
    # paths:
    #   - 'src/**'
  workflow_dispatch:
    
jobs:
  release:
    name: Release package
    runs-on: [ubuntu-latest]
    container: mcr.microsoft.com/dotnet/sdk:6.0-alpine
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"
          preferLatestVersion: true

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true

      - name: Run dotnet test
        run: dotnet test ./Guard.sln --collect:"XPlat Code Coverage"

      - name: Create package
        run: dotnet pack ./src/Guard.csproj -p:PackageVersion=${{ steps.gitversion.outputs.semVer }} -c Release

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./coverage1.xml,./coverage2.xml # optional


      # - name: Publish package
      #   run: dotnet nuget push $GITHUB_WORKSPACE/**/*.nupkg --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate

      # - name: Create release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     tag: ${{ steps.gitversion.outputs.semVer }}
      #     commit: "main"
      #     name: Release ${{ steps.gitversion.outputs.semVer }}
      #     generateReleaseNotes: true
      #     token: ${{ secrets.GITHUB_TOKEN }}
